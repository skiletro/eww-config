(defwindow bar
  :monitor 0
  :exclusive true
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "99%"
                      :height "10px"
                      :anchor "top center")
  (centerbox :class "bar"
    (box :space-evenly false :halign "start" :class "left"
      (window_title))
    (box :space-evenly false :halign "middle" :class "center"
      (workspaces))
    (box :space-evenly false :halign "end" :class "right"
      ;(systray)
      (music)
      (network)
      (volume)
      (battery)
      (time))))

(deflisten window :initial "..." "bash ~/.config/eww/scripts/get-window-title")
(defwidget window_title []
  (box :class "window_title" :halign "start" :visible "${window != "" ? "true" : "false"}" ;hides if there is no title
    (label :text "${window}")))

(deflisten workspaces :initial "[]" "bash ~/.config/eww/scripts/get-workspaces")
(deflisten current_workspace :initial "1" "bash ~/.config/eww/scripts/get-active-workspace")
(defwidget workspaces []
  (box :space-evenly true :class "workspaces"
    (label :text "${workspaces}${current_workspace}" :visible false)
    (for workspace in workspaces
      (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
        (box :class "${workspace.id == current_workspace ? "active" : "inactive"}" :style "padding: 0 2px 0 2px" 
          ;(label :text "${workspace.id}")
          (label :text "󰝥"))))))

(defpoll get_time :interval "10s" "date '+%I:%M%p - %b %d, %Y'")
(defwidget time []
  (box :class "time"
    (eventbox :onclick "eww open cal --toggle"
      (label :text "${get_time}"))))

(defpoll get_battery :interval "30s" "bash ~/.config/eww/scripts/display-battery")
(defwidget battery []
  (box :class "battery"
    (label :text "${get_battery}")))

(defpoll get_volume :interval "1s" "bash ~/.config/eww/scripts/display-volume")
(defwidget volume []
  (box :class "volume"
    (label :text "${get_volume}")))

(defpoll get_ssid :interval "30s" "iwgetid -r")
(defwidget network []
  (box :class "network"
    ;(label :text "${round(EWW_NET.enp4s0f3u1u1c2.NET_UP / 1000000, 2)}/${round(EWW_NET.enp4s0f3u1u1c2.NET_DOWN / 1000000, 2)}")
    (label :text "${get_ssid} 󰀂")))

(defpoll get_music :interval "5s" "bash ~/.config/eww/scripts/display-music")
(defwidget music []
  (box :class "music" :visible "${get_music != "" ? "true" : "false"}"
    (label :text "${get_music}")))